name: Test Docker Cron Container

on:
  push:
    branches:
      - main

jobs:
  test-cron-container:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # echo '*/1 * * * * root /bin/sh -c "/bin/echo \"Cron job executed\" >> /var/log/cron.log 2>&1"' > cronjobs
      - name: Create cronjobs file
        run: |
          echo '*/1 * * * * root echo "Cron job executed" >> /var/log/cron.log 2>&1' > cronjobs
          echo '' >> cronjobs  # 最後に改行がないと cron が動かないことがある

      - name: Build Docker image
        run: |
          docker build -t cron-container .

      - name: Run Docker container with cronjobs
        run: |
          docker run -d --name cron-test -v "$(pwd)/cronjobs:/etc/cron.d/cronjobs" cron-container
          # Cronが動くまでの待機。状況に応じて調整する。
          sleep 70

      - name: Check if cron is running
        run: |
          docker logs cron-test
          docker exec cron-test ps aux | grep cron
          docker exec cron-test ls -lah /etc/cron.d/
          docker exec cron-test cat /etc/cron.d/cronjobs
          docker exec cron-test which sh
          docker exec cron-test which echo

      - name: Check if cron job executed
        run: |
          docker exec cron-test cat /var/log/cron.log
          docker exec cron-test grep "Cron job executed" /var/log/cron.log || (echo "Cron job did not execute" && exit 1)

      - name: Check script permissions
        run: |
          docker exec cron-test ls -l /usr/local/bin/endpoint.sh
          docker exec cron-test test -x /usr/local/bin/endpoint.sh && echo "endpoint.sh is executable" || (echo "endpoint.sh is not executable" && exit 1)

      - name: Cleanup
        if: always()
        run: |
          docker stop cron-test
          docker rm cron-test
